/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry needs to be wrapped in an IIFE because it needs to be isolated against other entry modules.
(() => {
var __webpack_exports__ = {};
/*!******************************!*\
  !*** ./src/scss/styles.scss ***!
  \******************************/
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin

})();

// This entry needs to be wrapped in an IIFE because it needs to be isolated against other entry modules.
(() => {
/*!***************************!*\
  !*** ./src/ts/scripts.ts ***!
  \***************************/


/* Open all PDF links in a new window */
document.querySelectorAll('a').forEach(function (linkElem, index) {
  var _a;
  if (linkElem.hasAttribute('href') && ((_a = linkElem.getAttribute('href')) === null || _a === void 0 ? void 0 : _a.endsWith('.pdf'))) {
    linkElem.setAttribute('target', '_blank');
  }
});
/* mailencrypting */
setTimeout(function () {
  var mailElement = document.querySelectorAll('[data-madr1]:not(.madr-done)');
  mailElement.forEach(function (mail, index) {
    var maddr = mail.getAttribute('data-madr1') + '@' + mail.getAttribute('data-madr2') + '.' + mail.getAttribute('data-madr3');
    var linktext = mail.getAttribute('data-linktext') ? mail.getAttribute('data-linktext') : maddr;
    var a = document.createElement('a');
    a.setAttribute('href', "mailto:".concat(maddr));
    a.innerHTML = linktext || '';
    if (mail.parentElement) mail.parentElement.appendChild(a);
    mail.classList.add('madr-done');
    mail.style.display = 'none';
  });
}, 500);
/* Go to top button */
var themeTop = document.querySelector('#theme-to-top');
if (themeTop) {
  themeTop.addEventListener('click', function (e) {
    e.preventDefault();
    window.scrollTo({
      top: 0,
      left: 0,
      behavior: 'smooth'
    });
  });
}
/* scrolling behavior (to top button / breadcrumb) */
var navheader = document.querySelector('#theme-page-navigation');
var bc = document.querySelector('.theme-page-breadcrumb');
var toTop = document.querySelector("#theme-to-top");
window.addEventListener('scroll', function () {
  var navHeight = navheader.offsetHeight;
  if (bc) {
    bc.style.top = "".concat(navHeight - 1, "px");
    // Breadcrumb-Positon relativ to Viewport
    var bcPosition = Math.round(bc.getBoundingClientRect().top);
    // Toggle class if breadcrumb reaches top
    bc.classList.toggle('bg-light', bcPosition < navHeight);
    bc.classList.toggle('shadow-sm', bcPosition < navHeight);
  }
  if (toTop) {
    // show/hide scroll-to-top button
    toTop.classList.toggle('theme-top-visible', window.scrollY > 200);
  }
}, false);
/* Breadcrumb */
if (bc) {
  var bcTrigger = document.querySelector('.breadcrumb-item-trigger');
  var bcHome = document.querySelector('.breadcrumb-item-home');
  if (bcTrigger) {
    bcTrigger.addEventListener('click', function () {
      bcHome.style.display = bcHome.style.display === 'none' ? 'inline-block' : 'none';
    });
    bcTrigger.style.display = document.querySelectorAll('.breadcrumb-item').length > 2 ? 'inline-block' : 'none';
    bcHome.style.display = document.querySelectorAll('.breadcrumb-item').length > 2 ? 'none' : 'inline-block';
  }
}
})();

/******/ })()
;
//# sourceMappingURL=scripts.min.js.map